import { license, version } from "@designto/code";
import { FunctionDeclaration } from "coli";
import type {
  WidgetModuleInfo,
  PropsInfo,
  PropsDefaultValues,
  WidgetDeclarationInfo,
} from "./types";
export abstract class WidgetDeclarationDocBuilder {
  /**
   * package info
   *
   * @alpha TODO: not supported
   */
  readonly module: WidgetModuleInfo;

  /**
   * the widget declaration token
   */
  readonly declaration: WidgetDeclarationInfo;

  /**
   * @alpha TODO: not supported
   */
  readonly params: PropsInfo;

  /**
   * @alpha TODO: not supported
   */
  readonly defaultValues?: PropsDefaultValues | undefined;

  constructor({
    module,
    declaration,
    params,
    defaultValues,
  }: {
    module: WidgetModuleInfo;
    declaration: WidgetDeclarationInfo;
    params: PropsInfo;
    defaultValues?: PropsDefaultValues;
  }) {
    this.module = module;
    this.declaration = declaration;
    this.params = params;
    this.defaultValues = defaultValues;
  }

  protected get anonymous(): boolean {
    if (this.declaration instanceof FunctionDeclaration) {
      return this.declaration.id === undefined;
    } else {
      return (
        this.declaration.type === "export-anonymous-class-component" ||
        this.declaration.type ===
          "export-default-anonymous-functional-component"
      );
    }
  }

  protected get widgetname(): string {
    if (this.anonymous) {
      // anonymous default export
      return "Widget"; // for building example
    } else {
      if (this.declaration instanceof FunctionDeclaration) {
        return this.declaration.id!.name;
      } else {
        return this.declaration.identifier;
      }
    }
  }

  protected abstract partIntro();

  protected abstract partExample();

  protected abstract partParams();

  protected abstract partPreview();

  protected abstract partRemarks();

  protected partPrivateRemarks() {
    return `Code generated by grida.co | engine ${version} (${license}) | Generated code under CC0 (public domain) *This code is free to use, modify, and redistribute. (aknowledgment is not required)*`;
  }

  protected partBrandingFooter() {
    //
    const img_logo_32_madewithgrida = "";
    const img_artwork_footer_branding = "";
  }

  protected abstract partGridaMetaComment();
}
